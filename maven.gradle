apply plugin: 'maven-publish'
apply plugin: 'signing'


// Collect the source
task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  archiveClassifier = 'sources'
}

// Generates the javadoc
task javadocJar(type: Jar) {
  from javadoc
  archiveClassifier = 'javadoc'
}

javadoc { failOnError = false }


ext.isReleaseVersion = !version.endsWith('SNAPSHOT')


publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      
      artifact sourcesJar
      artifact javadocJar
      
      pom {
        name = "${project.group}:${project.archivesBaseName}"
        description = 'java-web-planet / jawn - A simple web framework in Java'
        url = 'https://github.com/MTDdk/jawn'
        
        licenses {
          license {
            name = 'GNU LGPL, Version 3.0'
            url = 'http://www.gnu.org/licenses/lgpl-3.0.txt'
          }
        }
        
        developers {
          developer {
            id = 'MTDdk'
            name = 'MTDdk'
            email = 'alvn@alvn.dk'
          }
        }
        
        issueManagement {
          system = 'Github Issues'
          url = 'https://github.com/MTDdk/jawn/issues'
        }
        
        scm {
          connection = 'scm:git://github.com/MTDdk/jawn.git'
          developerConnection = 'scm:git:git@github.com:MTDdk/jawn.git'
          url = 'https://github.com/MTDdk/jawn'
        }
      }
    }
  }
  
  repositories {
    maven {
      // change URLs to point to your repos, e.g. http://my.org/repo
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
      url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
      
      gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(':generatePomFileForMavenJavaPublication') && !taskGraph.hasTask(':publishToMavenLocal')) {
        
          // only do any maven related if we have the needed properties available
          if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
            credentials {
              username = ossrhUsername
              password = ossrhPassword
            }
          } else {
            throw new GradleException('You do not have your credentials stated')
          }
        }
      }
      
    }
  }
}

signing {
  required { isReleaseVersion }
  sign publishing.publications.mavenJava
}
